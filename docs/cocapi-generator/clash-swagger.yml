swagger: "2.0"
info:
  title: Clash of Clans API
  description: |
    Check out <a href="https://developer.clashofclans.com/#/getting-started" target="_parent">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href="https://jwt.io/" target="_blank">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href="https://developer.clashofclans.com/#/account" target="_parent">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: "Authorization: Bearer API_TOKEN".
  version: v1
  termsOfService: http://supercell.com/en/terms-of-service/
host: api.clashofclans.com
basePath: /v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  -
    name: clans
    description: Access clan specific information
  -
    name: players
    description: Access player specific information
  -
    name: leagues
    description: Access league information
  -
    name: locations
    description: Access global and local rankings
responses:
  InMaintenanceSpec:
    description: Service is temprorarily unavailable because of maintenance.
    schema:
      $ref: '#/definitions/ClientError'
  UnknownExceptionSpec:
    description: Unknown error happened when handling the request.
    schema:
      $ref: '#/definitions/ClientError'
  RequestThrottledSpec:
    description: |
      Request was throttled, because amount of requests was above the threshold defined for the used API token.
    schema:
      $ref: '#/definitions/ClientError'
  NotFoundSpec:
    description: Resource was not found.
    schema:
      $ref: '#/definitions/ClientError'
  ForbiddenSpec:
    description: |
      Access denied, either because of missing/incorrect credentials or used API token does not grant access to the requested resource.
    schema:
      $ref: '#/definitions/ClientError'
  BadRequestSpec:
    description: Client provided incorrect parameters for the request.
    schema:
      $ref: '#/definitions/ClientError'
definitions:
  LabelList:
    type: array
    items:
      $ref: '#/definitions/Label'
  Label:
    type: object
    properties:
      name:
        $ref: '#/definitions/JsonLocalizedName'
      id:
        type: integer
      iconUrls:
        type: object
        properties:
          tiny:
            type: string
          small:
            type: string
          medium:
            type: string
  JsonLocalizedName:
    type: object
  WarLeague:
    type: object
    properties:
      name:
        $ref: '#/definitions/JsonLocalizedName'
      id:
        type: integer
  WarLeagueList:
    type: array
    items:
      $ref: '#/definitions/WarLeague'
  PlayerRankingList:
    type: array
    items:
      $ref: '#/definitions/PlayerRanking'
  PlayerRanking:
    type: object
    properties:
      clan:
        $ref: '#/definitions/PlayerRankingClan'
      league:
        $ref: '#/definitions/League'
      attackWins:
        type: integer
      defenseWins:
        type: integer
      tag:
        type: string
      name:
        type: string
      expLevel:
        type: integer
      rank:
        type: integer
      previousRank:
        type: integer
      trophies:
        type: integer
  League:
    type: object
    properties:
      name:
        $ref: '#/definitions/JsonLocalizedName'
      id:
        type: integer
      iconUrls:
        type: object
        properties:
          tiny:
            type: string
          small:
            type: string
          medium:
            type: string
  PlayerRankingClan:
    type: object
    properties:
      tag:
        type: string
      name:
        type: string
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
  LeagueSeasonList:
    type: array
    items:
      $ref: '#/definitions/LeagueSeason'
  LeagueSeason:
    type: object
    properties:
      id:
        type: string
  LeagueList:
    type: array
    items:
      $ref: '#/definitions/League'
  PlayerVersusRankingList:
    type: array
    items:
      $ref: '#/definitions/PlayerVersusRanking'
  PlayerVersusRanking:
    type: object
    properties:
      clan:
        $ref: '#/definitions/PlayerRankingClan'
      versusBattleWins:
        type: integer
      tag:
        type: string
      name:
        type: string
      expLevel:
        type: integer
      rank:
        type: integer
      previousRank:
        type: integer
      versusTrophies:
        type: integer
  ClanVersusRankingList:
    type: array
    items:
      $ref: '#/definitions/ClanVersusRanking'
  ClanVersusRanking:
    type: object
    properties:
      clanVersusPoints:
        type: integer
      clanPoints:
        type: integer
  ClanRankingList:
    type: array
    items:
      $ref: '#/definitions/ClanRanking'
  ClanRanking:
    type: object
    properties:
      clanLevel:
        type: integer
      clanPoints:
        type: integer
      location:
        $ref: '#/definitions/Location'
      members:
        type: integer
      tag:
        type: string
      name:
        type: string
      rank:
        type: integer
      previousRank:
        type: integer
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
  Location:
    type: object
    properties:
      localizedName:
        type: string
      id:
        type: integer
      name:
        type: string
      isCountry:
        type: boolean
      countryCode:
        type: string
  LocationList:
    type: array
    items:
      $ref: '#/definitions/Location'
  ClanWarLeagueGroup:
    type: object
    properties:
      #tag:                #removed
      #  type: string
      state:
        type: string
        # add
        enum:
          - preparation
          - inWar
          - ended
        # end add
      season:
        type: string
        #format: date
        #pattern: yyyy'-'MM
      clans:
        $ref: '#/definitions/ClanWarLeagueClanList'
      rounds:
        $ref: '#/definitions/ClanWarLeagueRoundList'
  ClanWarLeagueRoundList:
    type: array
    items:
      $ref: '#/definitions/ClanWarLeagueRound'
  ClanWarLeagueRound:
    type: object
    properties:
      warTags:
        $ref: '#/definitions/StringList'
  StringList:
    type: array
    items:
      type: string
  String:
    type: object
  ClanWarLeagueClanList:
    type: array
    items:
      $ref: '#/definitions/ClanWarLeagueClan'
  ClanWarLeagueClan:
    type: object
    properties:
      tag:
        type: string
      clanLevel:
        type: integer
      name:
        type: string
      members:
        $ref: '#/definitions/ClanWarLeagueClanMemberList'
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
  ClanWarLeagueClanMemberList:
    type: array
    items:
      $ref: '#/definitions/ClanWarLeagueClanMember'
  ClanWarLeagueClanMember:
    type: object
    properties:
      tag:
        type: string
      townHallLevel:
        type: integer
      name:
        type: string
  ClanWar:
    type: object
    properties:
      clan:
        $ref: '#/definitions/WarClan'
      teamSize:
        type: integer
      opponent:
        $ref: '#/definitions/WarClan'
      startTime:
        type: string
        format: date-time  # this does not work, probably because the api does not put the hyphens in the date and there are no spaces
        #pattern: yyyyMMdd'T'HHmmss.fff'Z'
      state:
        type: string
        # add
        enum:
          - notInWar
          - preparation
          - inWar
          - warEnded
        # end add        
      endTime:
        type: string
        format: date-time  # this does not work, probably because the api does not put the hyphens in the date and there are no spaces
        #pattern: yyyyMMdd'T'HHmmss.fff'Z'
      preparationStartTime:
        type: string
        format: date-time  # this does not work, probably because the api does not put the hyphens in the date and there are no spaces
        #pattern: yyyyMMdd'T'HHmmss.fff'Z'
  WarClan:
    type: object
    properties:
      destructionPercentage:
        $ref: '#/definitions/Float'
      tag:
        type: string
      name:
        type: string
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
      clanLevel:
        type: integer
      attacks:
        type: integer
      stars:
        type: integer
      expEarned:
        type: integer
      members:
        $ref: '#/definitions/ClanWarMemberList'
  ClanWarMemberList:
    type: array
    items:
      $ref: '#/definitions/ClanWarMember'
  ClanWarMember:
    type: object
    properties:
      tag:
        type: string
      name:
        type: string
      mapPosition:
        type: integer
      townhallLevel:
        type: integer
      opponentAttacks:
        type: integer
      bestOpponentAttack:
        $ref: '#/definitions/ClanWarAttack'
      attacks:
        $ref: '#/definitions/ClanWarAttackList'
  ClanWarAttackList:
    type: array
    items:
      $ref: '#/definitions/ClanWarAttack'
  ClanWarAttack:
    type: object
    properties:
      order:
        type: integer
      attackerTag:
        type: string
      defenderTag:
        type: string
      stars:
        type: integer
      destructionPercentage:
        type: integer
  Float:
    type: object
  # ClanWarLog:
  #   type: array
  #   items:
  #     $ref: '#/definitions/ClanWarLogEntry'
  ClanWarLog:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ClanWarLogEntry'
  ClanWarLogEntry:
    type: object
    properties:
      clan:
        $ref: '#/definitions/WarClan'
      teamSize:
        type: integer
      opponent:
        $ref: '#/definitions/WarClan'
      endTime:
        type: string
        format: datetime  # this does not work, probably because the api does not put the hyphens in the date and there are no spaces
      result:
        type: string
        # add
        nullable: true
        enum: 
          - null
          - lose
          - tie
          - win          
        #end add
  ClanMemberList:
    type: array
    items:
      $ref: '#/definitions/ClanMember'
  ClanMember:
    type: object
    properties:
      league:
        $ref: '#/definitions/League'
      tag:
        type: string
      name:
        type: string
      role:
        type: string
      expLevel:
        type: integer
      clanRank:
        type: integer
      previousClanRank:
        type: integer
      donations:
        type: integer
      donationsReceived:
        type: integer
      trophies:
        type: integer
      versusTrophies:
        type: integer
  Clan:
    type: object
    properties:
      warLeague:
        $ref: '#/definitions/WarLeague'
      memberList:
        $ref: '#/definitions/ClanMemberList'
      clanVersusPoints:
        type: integer
      tag:
        type: string
      clanLevel:
        type: integer
      warWinStreak:
        type: integer
      warWins:
        type: integer
      warTies:
        type: integer
      warLosses:
        type: integer
      clanPoints:
        type: integer
      isWarLogPublic:
        type: boolean
      warFrequency:
        type: string
        # add
        enum:
          - unknown
          - never
          - lessThanOncePerWeek
          - oncePerWeek
          - moreThanOncePerWeek
          - always
        # end add
      requiredTrophies:
        type: integer
      labels:
        $ref: '#/definitions/LabelList'
      name:
        type: string
      location:
        $ref: '#/definitions/Location'
      type:
        type: string
        # add
        enum:
          - InviteOnly
          - Closed
          - Open
        # end add
      members:
        type: integer
      description:
        type: string
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
  # ClanList:
  #   type: array
  #   items:
  #     $ref: '#/definitions/Clan'
  ClanList:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Clan'
  Player:
    type: object
    properties:
      clan:
        $ref: '#/definitions/PlayerClan'
      league:
        $ref: '#/definitions/League'
      role:
        type: string
        # add
        nullable: true
        enum:
          - null
          - member
          - admin
          - coLeader
          - leader
        # end add
      attackWins:
        type: integer
      defenseWins:
        type: integer
      townHallLevel:
        type: integer
      townHallWeaponLevel:
        type: integer
      versusBattleWins:
        type: integer
      legendStatistics:
        $ref: '#/definitions/PlayerLegendStatistics'
      troops:
        $ref: '#/definitions/PlayerItemLevelList'
      heroes:
        $ref: '#/definitions/PlayerItemLevelList'
      spells:
        $ref: '#/definitions/PlayerItemLevelList'
      labels:
        $ref: '#/definitions/LabelList'
      tag:
        type: string
      name:
        type: string
      expLevel:
        type: integer
      trophies:
        type: integer
      bestTrophies:
        type: integer
      donations:
        type: integer
      donationsReceived:
        type: integer
      builderHallLevel:
        type: integer
      versusTrophies:
        type: integer
      bestVersusTrophies:
        type: integer
      warStars:
        type: integer
      achievements:
        $ref: '#/definitions/PlayerAchievementProgressList'
      versusBattleWinCount:
        type: integer
  PlayerAchievementProgressList:
    type: array
    items:
      $ref: '#/definitions/PlayerAchievementProgress'
  PlayerAchievementProgress:
    type: object
    properties:
      stars:
        type: integer
      value:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
      target:
        type: integer
      info:
        $ref: '#/definitions/JsonLocalizedName'
      completionInfo:
        $ref: '#/definitions/JsonLocalizedName'
      village:
        type: string
  PlayerItemLevelList:
    type: array
    items:
      $ref: '#/definitions/PlayerItemLevel'
  PlayerItemLevel:
    type: object
    properties:
      level:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
      maxLevel:
        type: integer
      village:
        type: string
  PlayerLegendStatistics:
    type: object
    properties:
      currentSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      previousSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      bestSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      previousVersusSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      bestVersusSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      legendTrophies:
        type: integer
  LegendLeagueTournamentSeasonResult:
    type: object
    properties:
      trophies:
        type: integer
      id:
        type: string
      rank:
        type: integer
  PlayerClan:
    type: object
    properties:
      tag:
        type: string
      clanLevel:
        type: integer
      name:
        type: string
      badgeUrls:
        type: object
        properties:
          small:
            type: string
          medium:
            type: string
          large: 
            type: string
  ClientError:
    type: object
    properties:
      reason:
        type: string
      message:
        type: string
      type:
        type: string
      detail:
        type: object
paths:
  /players/{playerTag}:
    get:
      summary: Get player information
      description: |
        Get information about a single player by player tag. Player tags can be found either in game or by from clan member lists. Note that player tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example player tag '#2ABC' would become '%232ABC' in the URL.
      operationId: getPlayer
      tags:
        - players
      parameters:
        -
          name: playerTag
          in: path
          description: Tag of the player.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Player'
  /clans:
    get:
      summary: Search clans
      description: |
        Search all clans by name and/or filtering the results using various criteria. At least one filtering criteria must be defined and if name is used as part of search, it is required to be at least three characters long. It is not possible to specify ordering for results so clients should not rely on any specific ordering as that may change in the future releases of the API.
      operationId: searchClans
      tags:
        - clans
      parameters:
        -
          name: name
          in: query
          description: |
            Search clans by name. If name is used as part of search query, it needs to be at least three characters long. Name search parameter is interpreted as wild card search, so it may appear anywhere in the clan name.
          required: false
          type: string
        -
          name: warFrequency
          in: query
          description: Filter by clan war frequency
          required: false
          type: string
        -
          name: locationId
          in: query
          description: |
            Filter by clan location identifier. For list of available locations, refer to getLocations operation.
          required: false
          type: integer
        -
          name: minMembers
          in: query
          description: Filter by minimum number of clan members
          required: false
          type: integer
        -
          name: maxMembers
          in: query
          description: Filter by maximum number of clan members
          required: false
          type: integer
        -
          name: minClanPoints
          in: query
          description: Filter by minimum amount of clan points.
          required: false
          type: integer
        -
          name: minClanLevel
          in: query
          description: Filter by minimum clan level.
          required: false
          type: integer
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: labelIds
          in: query
          description: Comma separatered list of label IDs to use for filtering results.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanList'
  /clans/{clanTag}:
    get:
      summary: Get clan information
      description: |
        Get information about a single clan by clan tag. Clan tags can be found using clan search operation. Note that clan tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example clan tag '#2ABC' would become '%232ABC' in the URL.
      operationId: getClan
      tags:
        - clans
      parameters:
        -
          name: clanTag
          in: path
          description: Tag of the clan.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Clan'
  /clans/{clanTag}/members:
    get:
      summary: List clan members
      description: List clan members.
      operationId: getClanMembers
      tags:
        - clans
      parameters:
        -
          name: clanTag
          in: path
          description: Tag of the clan.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanMemberList'
  /clans/{clanTag}/warlog:
    get:
      summary: Retrieve clan's clan war log
      description: Retrieve clan's clan war log
      operationId: getClanWarLog
      tags:
        - clans
      parameters:
        -
          name: clanTag
          in: path
          description: Tag of the clan.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLog'
  /clans/{clanTag}/currentwar:
    get:
      summary: Retrieve information about clan's current clan war
      description: Retrieve information about clan's current clan war
      operationId: getCurrentWar
      tags:
        - clans
      parameters:
        -
          name: clanTag
          in: path
          description: Tag of the clan.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWar'
  /clans/{clanTag}/currentwar/leaguegroup:
    get:
      summary: Retrieve information about clan's current clan war league group
      description: Retrieve information about clan's current clan war league group
      operationId: getClanWarLeagueGroup
      tags:
        - clans
      parameters:
        -
          name: clanTag
          in: path
          description: Tag of the clan.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLeagueGroup'
  /clanwarleagues/wars/{warTag}:
    get:
      summary: Retrieve information about individual clan war league war
      description: Retrieve information about individual clan war league war
      operationId: getClanWarLeagueWar
      tags:
        - clans
      parameters:
        -
          name: warTag
          in: path
          description: Tag of the war.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLeagueGroup'
  /locations:
    get:
      summary: List locations
      description: List locations
      operationId: getLocations
      tags:
        - locations
      parameters:
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LocationList'
  /locations/{locationId}:
    get:
      summary: Get location information
      description: Get information about specific location
      operationId: getLocation
      tags:
        - locations
      parameters:
        -
          name: locationId
          in: path
          description: Identifier of the location to retrieve.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Location'
  /locations/{locationId}/rankings/clans:
    get:
      summary: Get clan rankings for a specific location
      description: Get clan rankings for a specific location
      operationId: getClanRanking
      tags:
        - locations
      parameters:
        -
          name: locationId
          in: path
          description: Identifier of the location to retrieve.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanRankingList'
  /locations/{locationId}/rankings/players:
    get:
      summary: Get player rankings for a specific location
      description: Get player rankings for a specific location
      operationId: getPlayerRanking
      tags:
        - locations
      parameters:
        -
          name: locationId
          in: path
          description: Identifier of the location to retrieve.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerRankingList'
  /locations/{locationId}/rankings/clans-versus:
    get:
      summary: Get clan versus rankings for a specific location
      description: Get clan versus rankings for a specific location
      operationId: getClanVersusRanking
      tags:
        - locations
      parameters:
        -
          name: locationId
          in: path
          description: Identifier of the location to retrieve.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanVersusRankingList'
  /locations/{locationId}/rankings/players-versus:
    get:
      summary: Get player versus rankings for a specific location
      description: Get player versus rankings for a specific location
      operationId: getPlayerVersusRanking
      tags:
        - locations
      parameters:
        -
          name: locationId
          in: path
          description: Identifier of the location to retrieve.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerVersusRankingList'
  /leagues:
    get:
      summary: List leagues
      description: List leagues
      operationId: getLeagues
      tags:
        - leagues
      parameters:
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LeagueList'
  /leagues/{leagueId}:
    get:
      summary: Get league information
      description: Get league information
      operationId: getLeague
      tags:
        - leagues
      parameters:
        -
          name: leagueId
          in: path
          description: Identifier of the league.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/League'
  /leagues/{leagueId}/seasons:
    get:
      summary: Get league seasons
      description: |
        Get league seasons. Note that league season information is available only for Legend League.
      operationId: getLeagueSeasons
      tags:
        - leagues
      parameters:
        -
          name: leagueId
          in: path
          description: Identifier of the league.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LeagueSeasonList'
  /leagues/{leagueId}/seasons/{seasonId}:
    get:
      summary: Get league season rankings
      description: |
        Get league season rankings. Note that league season information is available only for Legend League.
      operationId: getLeagueSeasonRankings
      tags:
        - leagues
      parameters:
        -
          name: leagueId
          in: path
          description: Identifier of the league.
          required: true
          type: string
        -
          name: seasonId
          in: path
          description: Identifier of the season.
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerRankingList'
  /warleagues:
    get:
      summary: List war leagues
      description: List war leagues
      operationId: getWarLeagues
      tags:
        - leagues
      parameters:
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WarLeagueList'
  /warleagues/{leagueId}:
    get:
      summary: Get war league information
      description: Get war league information
      operationId: getWarLeague
      tags:
        - leagues
      parameters:
        -
          name: leagueId
          in: path
          description: Identifier of the league.
          required: true
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WarLeague'
  /labels/clans:
    get:
      summary: List clan labels
      description: List clan labels
      operationId: getClanLabels
      tags:
        - labels
      parameters:
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LabelList'
  /labels/players:
    get:
      summary: List player labels
      description: List player labels
      operationId: getPlayerLabels
      tags:
        - labels
      parameters:
        -
          name: limit
          in: query
          description: Limit the number of items returned in the response.
          required: false
          type: integer
        -
          name: after
          in: query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
        -
          name: before
          in: query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required: false
          type: string
      responses:
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LabelList'
securityDefinitions:
  JWT:
    type: apiKey
    description: JSON Web Token used as an API key
    name: authorization
    in: header
security:
  -
    JWT: []
