/* 
 * Clash of Clans API
 *
 * Check out <a href=\"https://developer.clashofclans.com/#/getting-started\" target=\"_parent\">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href=\"https://jwt.io/\" target=\"_blank\">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href=\"https://developer.clashofclans.com/#/account\" target=\"_parent\">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: \"Authorization: Bearer API_TOKEN\". 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CocApi.Client.OpenAPIDateConverter;

namespace CocApi
{
        /// <summary>
        /// Defines Result
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResultEnum
        {
            /// <summary>
            /// Enum Lose for value: lose
            /// </summary>
            [EnumMember(Value = "lose")]
            Lose = 1,

            /// <summary>
            /// Enum Tie for value: tie
            /// </summary>
            [EnumMember(Value = "tie")]
            Tie = 2,

            /// <summary>
            /// Enum Win for value: win
            /// </summary>
            [EnumMember(Value = "win")]
            Win = 3

        }

}



namespace CocApi.Model
{
    /// <summary>
    /// ClanWarLogEntry
    /// </summary>
    [DataContract]
    public partial class ClanWarLogEntry :  IValidatableObject 
    {
        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name="result", EmitDefaultValue=false)]
        public ResultEnum? Result { get; private set; }
    
    
        /// <summary>
        /// Initializes a new instance of the <see cref="ClanWarLogEntry" /> class.
        /// </summary>
        /// <param name="clan">clan.</param>
        /// <param name="teamSize">teamSize.</param>
        /// <param name="opponent">opponent.</param>
        /// <param name="endTime">endTime.</param>
        /// <param name="result">result.</param>
        public ClanWarLogEntry(WarClanLogEntry clan = default(WarClanLogEntry), int teamSize = default(int), WarClanLogEntry opponent = default(WarClanLogEntry), DateTime endTime = default(DateTime), ResultEnum? result = default(ResultEnum?))
        {
            this.Clan = clan;
            this.TeamSize = teamSize;
            this.Opponent = opponent;
            this.EndTime = endTime;
            this.Result = result;
        }
        
        /// <summary>
        /// Gets or Sets Clan
        /// </summary>
        [DataMember(Name="clan", EmitDefaultValue=false)]
        public WarClanLogEntry Clan { get; private set; }

        /// <summary>
        /// Gets or Sets TeamSize
        /// </summary>
        [DataMember(Name="teamSize", EmitDefaultValue=false)]
        public int TeamSize { get; private set; }

        /// <summary>
        /// Gets or Sets Opponent
        /// </summary>
        [DataMember(Name="opponent", EmitDefaultValue=false)]
        public WarClanLogEntry Opponent { get; private set; }

        /// <summary>
        /// Gets or Sets EndTime
        /// </summary>
        [DataMember(Name="endTime", EmitDefaultValue=false)]
        public DateTime EndTime { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClanWarLogEntry {\n");
            sb.Append("  Clan: ").Append(Clan).Append("\n");
            sb.Append("  TeamSize: ").Append(TeamSize).Append("\n");
            sb.Append("  Opponent: ").Append(Opponent).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}