/* 
 * Clash of Clans API
 *
 * Check out <a href=\"https://developer.clashofclans.com/#/getting-started\" target=\"_parent\">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href=\"https://jwt.io/\" target=\"_blank\">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href=\"https://developer.clashofclans.com/#/account\" target=\"_parent\">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: \"Authorization: Bearer API_TOKEN\". 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CocApi.Client.OpenAPIDateConverter;

namespace CocApi
{
}



namespace CocApi.Model
{
    /// <summary>
    /// PlayerAchievementProgress
    /// </summary>
    [DataContract]
    public partial class PlayerAchievementProgress :  IValidatableObject 
    {
        public DateTime ServerResponseExpires { get; internal set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="PlayerAchievementProgress" /> class.
        /// </summary>
        /// <param name="stars">stars.</param>
        /// <param name="value">value.</param>
        /// <param name="name">name.</param>
        /// <param name="target">target.</param>
        /// <param name="info">info.</param>
        /// <param name="completionInfo">completionInfo.</param>
        /// <param name="village">village.</param>
        public PlayerAchievementProgress(int stars = default(int), int value = default(int), string name = default(string), int target = default(int), string info = default(string), string completionInfo = default(string), string village = default(string))
        {
            this.Stars = stars;
            this.Value = value;
            this.Name = name;
            this.Target = target;
            this.Info = info;
            this.CompletionInfo = completionInfo;
            this.Village = village;
        }
        
        /// <summary>
        /// Gets or Sets Stars
        /// </summary>
        [DataMember(Name="stars", EmitDefaultValue=false)]
        public int Stars { get; private set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public int Value { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or Sets Target
        /// </summary>
        [DataMember(Name="target", EmitDefaultValue=false)]
        public int Target { get; private set; }

        /// <summary>
        /// Gets or Sets Info
        /// </summary>
        [DataMember(Name="info", EmitDefaultValue=false)]
        public string Info { get; private set; }

        /// <summary>
        /// Gets or Sets CompletionInfo
        /// </summary>
        [DataMember(Name="completionInfo", EmitDefaultValue=false)]
        public string CompletionInfo { get; private set; }

        /// <summary>
        /// Gets or Sets Village
        /// </summary>
        [DataMember(Name="village", EmitDefaultValue=false)]
        public string Village { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PlayerAchievementProgress {\n");
            sb.Append("  Stars: ").Append(Stars).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Target: ").Append(Target).Append("\n");
            sb.Append("  Info: ").Append(Info).Append("\n");
            sb.Append("  CompletionInfo: ").Append(CompletionInfo).Append("\n");
            sb.Append("  Village: ").Append(Village).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}