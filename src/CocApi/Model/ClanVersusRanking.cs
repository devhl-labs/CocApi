/* 
 * Clash of Clans API
 *
 * Check out <a href=\"https://developer.clashofclans.com/#/getting-started\" target=\"_parent\">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href=\"https://jwt.io/\" target=\"_blank\">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href=\"https://developer.clashofclans.com/#/account\" target=\"_parent\">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: \"Authorization: Bearer API_TOKEN\". 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CocApi.Client.OpenAPIDateConverter;

namespace CocApi.Model
{
/// <summary>
    /// ClanVersusRanking
    /// </summary>
    [DataContract]
    public partial class ClanVersusRanking :  IEquatable<ClanVersusRanking>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClanVersusRanking" /> class.
        /// </summary>
        /// <param name="clanVersusPoints">clanVersusPoints.</param>
        /// <param name="clanPoints">clanPoints.</param>
        public ClanVersusRanking(int clanVersusPoints = default(int), int clanPoints = default(int))
        {
            this.ClanVersusPoints = clanVersusPoints;
            this.ClanPoints = clanPoints;
        }
        
        /// <summary>
        /// Gets or Sets ClanVersusPoints
        /// </summary>
        [DataMember(Name="clanVersusPoints", EmitDefaultValue=false)]
        public int ClanVersusPoints { get; set; }

        /// <summary>
        /// Gets or Sets ClanPoints
        /// </summary>
        [DataMember(Name="clanPoints", EmitDefaultValue=false)]
        public int ClanPoints { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClanVersusRanking {\n");
            sb.Append("  ClanVersusPoints: ").Append(ClanVersusPoints).Append("\n");
            sb.Append("  ClanPoints: ").Append(ClanPoints).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ClanVersusRanking);
        }

        /// <summary>
        /// Returns true if ClanVersusRanking instances are equal
        /// </summary>
        /// <param name="input">Instance of ClanVersusRanking to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClanVersusRanking input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ClanVersusPoints == input.ClanVersusPoints ||
                    this.ClanVersusPoints.Equals(input.ClanVersusPoints)
                ) && 
                (
                    this.ClanPoints == input.ClanPoints ||
                    this.ClanPoints.Equals(input.ClanPoints)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
