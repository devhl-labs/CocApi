// this file was initially auto generated
// it will not be overwritten

/*
 * Clash of Clans API
 *
 * Check out <a href=\"https://developer.clashofclans.com/#/getting-started\" target=\"_parent\">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href=\"https://jwt.io/\" target=\"_blank\">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href=\"https://developer.clashofclans.com/#/account\" target=\"_parent\">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: \"Authorization: Bearer API_TOKEN\". 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Microsoft.Extensions.Logging;
using CocApi.Rest.Client;
using CocApi.Rest.Models;
using System.Net.Http;

namespace CocApi.Rest.Apis
{
    /// <summary>
    /// Validate requests and process server responses
    /// </summary>
    public class PlayersApi : BaseApis.PlayersApi
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlayersApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PlayersApi(ILogger<PlayersApi> logger, HttpClient httpClient, JsonSerializerOptionsProvider jsonSerializerOptionsProvider,
            TokenProvider<ApiKeyToken> apiKeyProvider
        )
        : base(logger, httpClient, jsonSerializerOptionsProvider,
            apiKeyProvider)
        {
        }

        protected override string OnFetchPlayer(string playerTag)
        {
            playerTag = Clash.FormatTag(playerTag);
            return base.OnFetchPlayer(playerTag);
        }

        protected override (VerifyTokenRequest, string) OnVerifyToken(VerifyTokenRequest body, string playerTag)
        {
            playerTag = Clash.FormatTag(playerTag);
            return base.OnVerifyToken(body, playerTag);
        }

        protected override void OnErrorFetchPlayer(Exception exception, string pathFormat, string path, string playerTag)
        {
            Logger.LogError(exception, "There was an error fetching the player for playerTag: {playerTag}", playerTag);
        }

        protected override void OnErrorVerifyToken(Exception exception, string pathFormat, string path, VerifyTokenRequest body, string playerTag)
        {
            Logger.LogError(exception, "There was an error fetching the token for playerTag: {playerTag}", playerTag);
        }
    }
}


