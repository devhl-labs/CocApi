/*
 * Clash of Clans API
 *
 * Check out <a href=\"https://developer.clashofclans.com/#/getting-started\" target=\"_parent\">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href=\"https://jwt.io/\" target=\"_blank\">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href=\"https://developer.clashofclans.com/#/account\" target=\"_parent\">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: \"Authorization: Bearer API_TOKEN\". 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using CocApi.Rest.Client;

namespace CocApi.Rest.Extensions
{
    /// <summary>
    /// Extension methods for IHostBuilder
    /// </summary>
    public static class IHostBuilderExtensions
    {
        /// <summary>
        /// Add the api to your host builder.
        /// </summary>
        /// <param name="builder"></param>
        /// <param name="options"></param>
        public static IHostBuilder ConfigureCocApi<TClansApi, TDeveloperApi, TGoldpassApi, TLabelsApi, TLeaguesApi, TLocationsApi, TPlayersApi>(this IHostBuilder builder, Action<HostBuilderContext, IServiceCollection, HostConfiguration<TClansApi, TDeveloperApi, TGoldpassApi, TLabelsApi, TLeaguesApi, TLocationsApi, TPlayersApi>> options)
            where TClansApi : class, IApis.IClansApi
            where TDeveloperApi : class, IApis.IDeveloperApi
            where TGoldpassApi : class, IApis.IGoldpassApi
            where TLabelsApi : class, IApis.ILabelsApi
            where TLeaguesApi : class, IApis.ILeaguesApi
            where TLocationsApi : class, IApis.ILocationsApi
            where TPlayersApi : class, IApis.IPlayersApi
        {
            builder.ConfigureServices((context, services) => 
            {
                HostConfiguration<TClansApi, TDeveloperApi, TGoldpassApi, TLabelsApi, TLeaguesApi, TLocationsApi, TPlayersApi> config = new HostConfiguration<TClansApi, TDeveloperApi, TGoldpassApi, TLabelsApi, TLeaguesApi, TLocationsApi, TPlayersApi>(services);

                options(context, services, config);

                IServiceCollectionExtensions.AddCocApi(services, config);
            });

            return builder;
        }

        /// <summary>
        /// Add the api to your host builder.
        /// </summary>
        /// <param name="builder"></param>
        /// <param name="options"></param>
        public static IHostBuilder ConfigureCocApi(this IHostBuilder builder, Action<HostBuilderContext, IServiceCollection, HostConfiguration<Apis.ClansApi, Apis.DeveloperApi, Apis.GoldpassApi, Apis.LabelsApi, Apis.LeaguesApi, Apis.LocationsApi, Apis.PlayersApi>> options)
            => ConfigureCocApi<Apis.ClansApi, Apis.DeveloperApi, Apis.GoldpassApi, Apis.LabelsApi, Apis.LeaguesApi, Apis.LocationsApi, Apis.PlayersApi>(builder, options);
    }
}
