// <auto-generated />
using System;
using CocApi.Cache;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CocApi.Cache.Migrations
{
    [DbContext(typeof(CachedContext))]
    [Migration("20200819233353_Migration0")]
    partial class Migration0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("CocApi.Cache.CocApi.CachedPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Download")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Downloaded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServerExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CocApi.Cache.Models.Cache.CachedClan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Download")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DownloadCurrentWar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DownloadCwl")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DownloadMembers")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Downloaded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServerExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("CocApi.Cache.Models.Cache.CachedClanWar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Downloaded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServerExpiration")
                        .HasColumnType("TEXT");

                    b.Property<int?>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("ClanWars");
                });

            modelBuilder.Entity("CocApi.Cache.Models.Cache.CachedClanWarLeagueGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Downloaded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Season")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServerExpiration")
                        .HasColumnType("TEXT");

                    b.Property<int?>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CocApi.Cache.Models.Cache.CachedWar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Announcements")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClanTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Downloaded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsAvailableByClan")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsAvailableByOpponent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LocalExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpponentTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PrepStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServerExpiration")
                        .HasColumnType("TEXT");

                    b.Property<int?>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WarTag")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClanTag");

                    b.HasIndex("OpponentTag");

                    b.HasIndex("PrepStartTime", "ClanTag")
                        .IsUnique();

                    b.HasIndex("PrepStartTime", "OpponentTag")
                        .IsUnique();

                    b.ToTable("Wars");
                });
#pragma warning restore 612, 618
        }
    }
}
